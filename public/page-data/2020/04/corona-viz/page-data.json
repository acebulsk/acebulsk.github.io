{"componentChunkName":"component---node-modules-gatsby-theme-medium-src-templates-post-js","path":"/2020/04/corona-viz/","result":{"data":{"post":{"id":"69972f87-2d5e-557d-ac94-6a3ee73487d9","title":"A minimalist visualization of Coronavirus rates","date":"April 27, 2020","excerpt":"I had been getting frustrated with not being able to quickly find coronavirus\ndata for my area, and not being able to see recent trends…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"A minimalist visualization of Coronavirus rates\",\n  \"date\": \"2020-04-27\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I had been getting frustrated with not being able to quickly find coronavirus\\ndata for my area, and not being able to see recent trends without framing and\\ninterpretation. So I grabbed down the John Hopkins CSSE data and made a quick\\nShiny app to visualize case and death rates.\\nI\\u2019m trying to not contribute to\\nthe constant noise surrounding the ongoing pandemic, but having a\\nway to see these numbers without an overwhelming amount of surrounding\\neditorialization has made me feel like I understand the world a bit better.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/img/blog/covid.png\",\n    \"alt\": null\n  }))), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://mm218.shinyapps.io/corona_data_explore/\"\n  }), \"The app lives at this link\"), \".\\nThanks to R Studio, who are providing free hosting for coronavirus apps through\\nthe pandemic.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"Mike Mahoney"}}},"pageContext":{"id":"69972f87-2d5e-557d-ac94-6a3ee73487d9","excerpt":"I had been getting frustrated with not being able to quickly find coronavirus\ndata for my area, and not being able to see recent trends…","slug":"/2020/04/corona-viz/","title":"A minimalist visualization of Coronavirus rates","date":"April 27, 2020","siteTitle":"Mike Mahoney","socialLinks":[{"name":"Github","url":"https://github.com/mikemahoney218"},{"name":"Linkedin","url":"https://linkedin.com/in/mikemahoney218/"},{"name":"Twitter","url":"https://twitter.com/mikemahoney218"}],"previous":{"node":{"id":"5594614d-8715-5615-a066-07a5e3f0858d","excerpt":"Part 3 in the data visualization series","slug":"/2020/04/making-excellent-viz/","title":"Making Excellent Visualizations","date":"April 22, 2020"}},"next":{"node":{"id":"cf2dd11d-9b9a-5543-86d4-f34ab92e9769","excerpt":"A guide to installing InfluxDB, Telegraf, and Grafana on a Raspberry Pi 4 running Raspbian Buster. Unlike every other guide like this on the internet, this one works.","slug":"/2020/05/tig-on-pi/","title":"Installing the TIG stack on Raspberry Pi","date":"May 03, 2020"}}}}}