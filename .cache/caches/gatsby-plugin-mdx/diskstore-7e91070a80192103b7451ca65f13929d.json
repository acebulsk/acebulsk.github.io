{"expireTime":9007200842590030000,"key":"gatsby-plugin-mdx-entire-payload-cf3e4c1f440dec1e53da8a685c9ff709-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"My first package just got published to CRAN today! ","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":52,"offset":53},"indent":[]}},{"type":"inlineCode","value":"heddlr","position":{"start":{"line":3,"column":52,"offset":53},"end":{"line":3,"column":60,"offset":61},"indent":[]}},{"type":"text","value":" is a set of tools \nthat make it easier to write modular R Markdown documents by decomposing them \ninto a set of patterns which can be repeated and combined based on your input \ndata, letting you dynamically add and remove sections based on your data. I \nstarted this package to solve an issue I found myself running into when \nbuilding ","position":{"start":{"line":3,"column":60,"offset":61},"end":{"line":8,"column":10,"offset":398},"indent":[1,1,1,1,1]}},{"type":"link","title":null,"url":"https://rmarkdown.rstudio.com/flexdashboard/","children":[{"type":"text","value":"flexdashboards","position":{"start":{"line":8,"column":11,"offset":399},"end":{"line":8,"column":25,"offset":413},"indent":[]}}],"position":{"start":{"line":8,"column":10,"offset":398},"end":{"line":8,"column":72,"offset":460},"indent":[]}},{"type":"text","value":", and \nhave since found out that there's all sorts of cool tricks you can do by \napplying this type of functional programming mindset to R Markdown documents.","position":{"start":{"line":8,"column":72,"offset":460},"end":{"line":10,"column":78,"offset":618},"indent":[1,1]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":10,"column":78,"offset":618},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can find out more on heddlr's ","position":{"start":{"line":12,"column":1,"offset":620},"end":{"line":12,"column":35,"offset":654},"indent":[]}},{"type":"link","title":null,"url":"https://mikemahoney218.github.io/heddlr/","children":[{"type":"text","value":"documentation website","position":{"start":{"line":12,"column":36,"offset":655},"end":{"line":12,"column":57,"offset":676},"indent":[]}}],"position":{"start":{"line":12,"column":35,"offset":654},"end":{"line":12,"column":100,"offset":719},"indent":[]}},{"type":"text","value":",\nproudly made in R via ","position":{"start":{"line":12,"column":100,"offset":719},"end":{"line":13,"column":23,"offset":743},"indent":[1]}},{"type":"link","title":null,"url":"https://pkgdown.r-lib.org/","children":[{"type":"text","value":"pkgdown","position":{"start":{"line":13,"column":24,"offset":744},"end":{"line":13,"column":31,"offset":751},"indent":[]}}],"position":{"start":{"line":13,"column":23,"offset":743},"end":{"line":13,"column":60,"offset":780},"indent":[]}},{"type":"text","value":". This first version \non CRAN is 0.5.0, with 0.1 -> 0.4 previously released on ","position":{"start":{"line":13,"column":60,"offset":780},"end":{"line":14,"column":58,"offset":859},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/mikemahoney218/heddlr","children":[{"type":"text","value":"GitHub","position":{"start":{"line":14,"column":59,"offset":860},"end":{"line":14,"column":65,"offset":866},"indent":[]}}],"position":{"start":{"line":14,"column":58,"offset":859},"end":{"line":14,"column":108,"offset":909},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":14,"column":108,"offset":909},"end":{"line":14,"column":109,"offset":910},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":620},"end":{"line":14,"column":109,"offset":910},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Announcing {heddlr}, now on CRAN!\",\"path\":\"/2020/01/heddlr-release\",\"tags\":[\"R\",\"R Packages\",\"R Markdown\"],\"featuredImage\":\"./heddlr-badge.png\",\"date\":\"2019-01-23\",\"updated\":\"2019-01-23\",\"excerpt\":\"Write less boilerplate, get more done.\"}","position":{"start":{"line":17,"column":1,"offset":913},"end":{"line":17,"column":277,"offset":1189},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":17,"column":277,"offset":1189}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Announcing {heddlr}, now on CRAN!\",\n  \"path\": \"/2020/01/heddlr-release\",\n  \"tags\": [\"R\", \"R Packages\", \"R Markdown\"],\n  \"featuredImage\": \"./heddlr-badge.png\",\n  \"date\": \"2019-01-23\",\n  \"updated\": \"2019-01-23\",\n  \"excerpt\": \"Write less boilerplate, get more done.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"My first package just got published to CRAN today! \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"heddlr\"), \" is a set of tools\\nthat make it easier to write modular R Markdown documents by decomposing them\\ninto a set of patterns which can be repeated and combined based on your input\\ndata, letting you dynamically add and remove sections based on your data. I\\nstarted this package to solve an issue I found myself running into when\\nbuilding \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://rmarkdown.rstudio.com/flexdashboard/\"\n  }), \"flexdashboards\"), \", and\\nhave since found out that there\\u2019s all sorts of cool tricks you can do by\\napplying this type of functional programming mindset to R Markdown documents.\"), mdx(\"p\", null, \"You can find out more on heddlr\\u2019s \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://mikemahoney218.github.io/heddlr/\"\n  }), \"documentation website\"), \",\\nproudly made in R via \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://pkgdown.r-lib.org/\"\n  }), \"pkgdown\"), \". This first version\\non CRAN is 0.5.0, with 0.1 -> 0.4 previously released on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/mikemahoney218/heddlr\"\n  }), \"GitHub\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Announcing {heddlr}, now on CRAN!\",\n  \"path\": \"/2020/01/heddlr-release\",\n  \"tags\": [\"R\", \"R Packages\", \"R Markdown\"],\n  \"featuredImage\": \"./heddlr-badge.png\",\n  \"date\": \"2019-01-23\",\n  \"updated\": \"2019-01-23\",\n  \"excerpt\": \"Write less boilerplate, get more done.\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`My first package just got published to CRAN today! `}<inlineCode parentName=\"p\">{`heddlr`}</inlineCode>{` is a set of tools\nthat make it easier to write modular R Markdown documents by decomposing them\ninto a set of patterns which can be repeated and combined based on your input\ndata, letting you dynamically add and remove sections based on your data. I\nstarted this package to solve an issue I found myself running into when\nbuilding `}<a parentName=\"p\" {...{\n        \"href\": \"https://rmarkdown.rstudio.com/flexdashboard/\"\n      }}>{`flexdashboards`}</a>{`, and\nhave since found out that there’s all sorts of cool tricks you can do by\napplying this type of functional programming mindset to R Markdown documents.`}</p>\n    <p>{`You can find out more on heddlr’s `}<a parentName=\"p\" {...{\n        \"href\": \"https://mikemahoney218.github.io/heddlr/\"\n      }}>{`documentation website`}</a>{`,\nproudly made in R via `}<a parentName=\"p\" {...{\n        \"href\": \"https://pkgdown.r-lib.org/\"\n      }}>{`pkgdown`}</a>{`. This first version\non CRAN is 0.5.0, with 0.1 -> 0.4 previously released on `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/mikemahoney218/heddlr\"\n      }}>{`GitHub`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}