{"expireTime":9007200842590031000,"key":"gatsby-plugin-mdx-entire-payload-5a9c1738a000534d321df4d3c1f94932-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"I've launched a new package to CRAN! ","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":38,"offset":39},"indent":[]}},{"type":"inlineCode","value":"spacey","position":{"start":{"line":3,"column":38,"offset":39},"end":{"line":3,"column":46,"offset":47},"indent":[]}},{"type":"text","value":" helps you pull elevation and \nimage overlay data from the USGS and ESRI, then helps you turn them into \nbeautiful maps via ","position":{"start":{"line":3,"column":46,"offset":47},"end":{"line":5,"column":20,"offset":171},"indent":[1,1]}},{"type":"link","title":null,"url":"https://www.rayshader.com/","children":[{"type":"text","value":"the fantastic ","position":{"start":{"line":5,"column":21,"offset":172},"end":{"line":5,"column":35,"offset":186},"indent":[]}},{"type":"inlineCode","value":"rayshader","position":{"start":{"line":5,"column":35,"offset":186},"end":{"line":5,"column":46,"offset":197},"indent":[]}},{"type":"text","value":" package","position":{"start":{"line":5,"column":46,"offset":197},"end":{"line":5,"column":54,"offset":205},"indent":[]}}],"position":{"start":{"line":5,"column":20,"offset":171},"end":{"line":5,"column":83,"offset":234},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":5,"column":83,"offset":234},"end":{"line":5,"column":84,"offset":235},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":5,"column":84,"offset":235},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The package has a ","position":{"start":{"line":7,"column":1,"offset":237},"end":{"line":7,"column":19,"offset":255},"indent":[]}},{"type":"link","title":null,"url":"https://mikemahoney218.github.io/spacey/","children":[{"type":"text","value":"documentation website","position":{"start":{"line":7,"column":20,"offset":256},"end":{"line":7,"column":41,"offset":277},"indent":[]}}],"position":{"start":{"line":7,"column":19,"offset":255},"end":{"line":7,"column":84,"offset":320},"indent":[]}},{"type":"text","value":"\nbuilt with ","position":{"start":{"line":7,"column":84,"offset":320},"end":{"line":8,"column":12,"offset":332},"indent":[1]}},{"type":"link","title":null,"url":"https://pkgdown.r-lib.org/","children":[{"type":"text","value":"pkgdown","position":{"start":{"line":8,"column":13,"offset":333},"end":{"line":8,"column":20,"offset":340},"indent":[]}}],"position":{"start":{"line":8,"column":12,"offset":332},"end":{"line":8,"column":49,"offset":369},"indent":[]}},{"type":"text","value":" -- check it out for more \ninformation!","position":{"start":{"line":8,"column":49,"offset":369},"end":{"line":9,"column":13,"offset":408},"indent":[1]}}],"position":{"start":{"line":7,"column":1,"offset":237},"end":{"line":9,"column":13,"offset":408},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Announcing {spacey}, now on CRAN!\",\"path\":\"/2020/03/spacey-release\",\"tags\":[\"R\",\"R Packages\",\"maps\",\"spacey\",\"geospatial data\"],\"featuredImage\":\"./spacey.png\",\"date\":\"2019-03-24\",\"updated\":\"2019-03-24\",\"excerpt\":\"USGS data access and rayshader maps, done cheap.\"}","position":{"start":{"line":12,"column":1,"offset":411},"end":{"line":12,"column":302,"offset":712},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":12,"column":302,"offset":712}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Announcing {spacey}, now on CRAN!\",\n  \"path\": \"/2020/03/spacey-release\",\n  \"tags\": [\"R\", \"R Packages\", \"maps\", \"spacey\", \"geospatial data\"],\n  \"featuredImage\": \"./spacey.png\",\n  \"date\": \"2019-03-24\",\n  \"updated\": \"2019-03-24\",\n  \"excerpt\": \"USGS data access and rayshader maps, done cheap.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I\\u2019ve launched a new package to CRAN! \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spacey\"), \" helps you pull elevation and\\nimage overlay data from the USGS and ESRI, then helps you turn them into\\nbeautiful maps via \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.rayshader.com/\"\n  }), \"the fantastic \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"rayshader\"), \" package\"), \".\"), mdx(\"p\", null, \"The package has a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://mikemahoney218.github.io/spacey/\"\n  }), \"documentation website\"), \"\\nbuilt with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://pkgdown.r-lib.org/\"\n  }), \"pkgdown\"), \" \\u2014 check it out for more\\ninformation!\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Announcing {spacey}, now on CRAN!\",\n  \"path\": \"/2020/03/spacey-release\",\n  \"tags\": [\"R\", \"R Packages\", \"maps\", \"spacey\", \"geospatial data\"],\n  \"featuredImage\": \"./spacey.png\",\n  \"date\": \"2019-03-24\",\n  \"updated\": \"2019-03-24\",\n  \"excerpt\": \"USGS data access and rayshader maps, done cheap.\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`I’ve launched a new package to CRAN! `}<inlineCode parentName=\"p\">{`spacey`}</inlineCode>{` helps you pull elevation and\nimage overlay data from the USGS and ESRI, then helps you turn them into\nbeautiful maps via `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.rayshader.com/\"\n      }}>{`the fantastic `}<inlineCode parentName=\"a\">{`rayshader`}</inlineCode>{` package`}</a>{`.`}</p>\n    <p>{`The package has a `}<a parentName=\"p\" {...{\n        \"href\": \"https://mikemahoney218.github.io/spacey/\"\n      }}>{`documentation website`}</a>{`\nbuilt with `}<a parentName=\"p\" {...{\n        \"href\": \"https://pkgdown.r-lib.org/\"\n      }}>{`pkgdown`}</a>{` — check it out for more\ninformation!`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}